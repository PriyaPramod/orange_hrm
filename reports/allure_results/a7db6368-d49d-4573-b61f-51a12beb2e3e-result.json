{"name": "test_tc_002_add_product_and_verify", "status": "broken", "statusDetails": {"message": "TypeError: 'in <string>' requires string as left operand, not method", "trace": "self = <test_scripts.test_cart.test_cart.TestCart object at 0x08CB9130>\nrequest = <FixtureRequest for <Function test_tc_002_add_product_and_verify>>\n\n    def test_tc_002_add_product_and_verify(self, request):\n        product_name = excel.get_cell_value(constants.EXCEL_PATH, \"Cart\", 1, \"ProductName\")\n        success_message = excel.get_cell_value(constants.EXCEL_PATH, \"Cart\", 1, \"SuccessMessage\")\n        success_message_after_deleting = excel.get_cell_value(constants.EXCEL_PATH, \"Cart\", 1, \"SuccessMessageAfterDelete\")\n    \n        dashboard = pm.get_dashboard(request.node.driver)\n        cart = pm.get_cart(request.node.driver)\n    \n        dashboard.enter_product_name_to_search_box(product_name)\n        product_added = dashboard.get_product_name()\n        dashboard.select_product_to_add_to_cart()\n    \n        dashboard.click_on_add_to_cart()\n        message = dashboard.get_message_after_adding_to_cart()\n    \n        assert success_message in message, \"Unable to add the product to cart\"\n    \n        dashboard.click_on_cart_box()\n        product_name_in_cart = cart.get_product_name_from_cart_page()\n    \n        assert product_name_in_cart == product_added, \"Added product is not available in the cart page\"\n    \n        cart.delete_the_added_product_from_cart()\n    \n>       assert cart.get_confirm_message_after_deleting_product in success_message_after_deleting\nE       TypeError: 'in <string>' requires string as left operand, not method\n\ntest_scripts\\test_cart\\test_cart.py:31: TypeError"}, "steps": [{"name": "enter_product_name_to_search_box", "status": "passed", "parameters": [{"name": "product_name", "value": "'One Plus 7 Pro'"}], "start": 1566668435710, "stop": 1566668440422}, {"name": "get_product_name", "status": "passed", "start": 1566668440422, "stop": 1566668441525}, {"name": "select_product_to_add_to_cart", "status": "passed", "start": 1566668441525, "stop": 1566668442180}, {"name": "click_on_add_to_cart", "status": "passed", "start": 1566668442180, "stop": 1566668450355}, {"name": "get_message_after_adding_to_cart", "status": "passed", "start": 1566668450356, "stop": 1566668451225}, {"name": "click_on_cart_box", "status": "passed", "start": 1566668451226, "stop": 1566668452969}, {"name": "get_product_name_from_cart_page", "status": "passed", "start": 1566668452969, "stop": 1566668453102}, {"name": "delete_the_added_product_from_cart", "status": "passed", "start": 1566668453103, "stop": 1566668453850}], "start": 1566668432601, "stop": 1566668453860, "uuid": "e5582569-20de-43ff-a954-5228b268714f", "historyId": "3606d963eae4bdfb89717742b5b8800b", "fullName": "test_scripts.test_cart.test_cart.TestCart#test_tc_002_add_product_and_verify", "labels": [{"name": "parentSuite", "value": "test_scripts.test_cart"}, {"name": "suite", "value": "test_cart"}, {"name": "subSuite", "value": "TestCart"}, {"name": "host", "value": "DESKTOP-JAMBUR3"}, {"name": "thread", "value": "15560-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_scripts.test_cart.test_cart"}]}