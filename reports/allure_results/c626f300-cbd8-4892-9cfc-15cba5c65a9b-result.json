{"name": "test_tc_002_add_product_and_verify", "status": "broken", "statusDetails": {"message": "TypeError: 'in <string>' requires string as left operand, not method", "trace": "self = <test_scripts.test_cart.test_cart.TestCart object at 0x0927E710>\nrequest = <FixtureRequest for <Function test_tc_002_add_product_and_verify>>\n\n    def test_tc_002_add_product_and_verify(self, request):\n        product_name = excel.get_cell_value(constants.EXCEL_PATH, \"Cart\", 1, \"ProductName\")\n        success_message = excel.get_cell_value(constants.EXCEL_PATH, \"Cart\", 1, \"SuccessMessage\")\n        success_message_after_deleting = excel.get_cell_value(constants.EXCEL_PATH, \"Cart\", 1, \"SuccessMessageAfterDelete\")\n    \n        dashboard = pm.get_dashboard(request.node.driver)\n        cart = pm.get_cart(request.node.driver)\n    \n        dashboard.enter_product_name_to_search_box(product_name)\n        product_added = dashboard.get_product_name()\n        dashboard.select_product_to_add_to_cart()\n    \n        dashboard.click_on_add_to_cart()\n        message = dashboard.get_message_after_adding_to_cart()\n    \n        assert success_message in message, \"Unable to add the product to cart\"\n    \n        dashboard.click_on_cart_box()\n        product_name_in_cart = cart.get_product_name_from_cart_page()\n    \n        assert product_name_in_cart == product_added, \"Added product is not available in the cart page\"\n    \n        cart.delete_the_added_product_from_cart()\n    \n>       assert cart.get_confirm_message_after_deleting_product in success_message_after_deleting\nE       TypeError: 'in <string>' requires string as left operand, not method\n\ntest_scripts\\test_cart\\test_cart.py:31: TypeError"}, "steps": [{"name": "enter_product_name_to_search_box", "status": "passed", "parameters": [{"name": "product_name", "value": "'One Plus 7 Pro'"}], "start": 1566668957277, "stop": 1566668966112}, {"name": "get_product_name", "status": "passed", "start": 1566668966112, "stop": 1566668966276}, {"name": "select_product_to_add_to_cart", "status": "passed", "start": 1566668966277, "stop": 1566668967325}, {"name": "click_on_add_to_cart", "status": "passed", "start": 1566668967325, "stop": 1566668977312}, {"name": "get_message_after_adding_to_cart", "status": "passed", "start": 1566668977312, "stop": 1566668977501}, {"name": "click_on_cart_box", "status": "passed", "start": 1566668977501, "stop": 1566668980318}, {"name": "get_product_name_from_cart_page", "status": "passed", "start": 1566668980318, "stop": 1566668980415}, {"name": "delete_the_added_product_from_cart", "status": "passed", "start": 1566668980416, "stop": 1566668981198}], "start": 1566668953552, "stop": 1566668981223, "uuid": "75d353c1-90e3-4deb-814e-517131dbc3e3", "historyId": "3606d963eae4bdfb89717742b5b8800b", "fullName": "test_scripts.test_cart.test_cart.TestCart#test_tc_002_add_product_and_verify", "labels": [{"name": "parentSuite", "value": "test_scripts.test_cart"}, {"name": "suite", "value": "test_cart"}, {"name": "subSuite", "value": "TestCart"}, {"name": "host", "value": "DESKTOP-JAMBUR3"}, {"name": "thread", "value": "6056-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_scripts.test_cart.test_cart"}]}